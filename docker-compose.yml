version: '3.3'

services:
  postgres:
    image: 'postgres:13.2'
    volumes:
      - 'db-data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: IKT453
      POSTGRES_DB: employee

  cassandra:
    image: 'cassandra:latest'
    ports:
      - '9042:9042'
    environment:
      CASSANDRA_CLUSTER_NAME: myCassandraCluster
    volumes:
      - 'cassandra-data:/var/lib/cassandra'

  mongodb:
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    volumes:
      - 'mongodb-data:/data/db'
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret

  dotnet:
    depends_on:
      - postgres
      - cassandra
      - mongodb
    build: .
    image: lemoi18/ikt435
    ports:
      - '5000:5000'
    restart: always
    environment:
      - 'ASPNETCORE_URLS=http://+:5000'
      - ASPNETCORE_ENVIRONMENT=Production

  broker:
    image: confluentinc/cp-kafka:5.5.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  db-data: null
  cassandra-data: null
  mongodb-data: null
